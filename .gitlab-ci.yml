# This file is a template, and might need editing before it works on your project.
# Read more about this script on this blog post https://about.gitlab.com/2018/10/24/setting-up-gitlab-ci-for-android-projects/, by Jason Lenny
# If you are interested in using Android with FastLane for publishing take a look at the Android-Fastlane template.

# image: openjdk:8-jdk
# image: redis@sha256:54057dd7e125ca41afe526a877e8bd35ec2cdd33b9217e022ed37bdcf7d09673
image: linliangbin/android_build_image:latest
#variables:
#  ANDROID_COMPILE_SDK: "28"
#  ANDROID_BUILD_TOOLS: "28.0.2"
#  ANDROID_SDK_TOOLS: "4333796"

variables:
  ANDROID_COMPILE_SDK: "25"
  ANDROID_BUILD_TOOLS: "25.0.23"
  ANDROID_SDK_TOOLS: "25.2.5" # from SDK Manager window (SDK Tool)
  ANDROID_EMULATOR_SDK: "24"
  ANDROID_EMULATOR_ABI: "armeabi-v7a"
  ANDROID_EMULATOR_PLATFORM: "arm"


before_script:
    - java -version
#   - apt-get --quiet update --yes
#   - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
#   - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/tools_r${ANDROID_SDK_TOOLS}-linux.zip
#   - unzip -d android-sdk-linux android-sdk.zip
#   - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
#   - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
#   - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools-${ANDROID_BUILD_TOOLS}" >/dev/null
#   - export ANDROID_HOME=$PWD/android-sdk-linux
#   - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
#   - chmod +x ./gradlew
#   # temporarily disable checking for EPIPE error and use yes to accept all licenses
#   - set +o pipefail
#   - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
#   - set -o pipefail

stages:
  - build

assembleRelease:
  stage: build
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - app/build/outputs/
